@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap");
@import "https://unpkg.com/open-props";
@import "https://unpkg.com/open-props/normalize.min.css";

/* the following switch imports have selectors that enable the override of the system setting */
@import "https://unpkg.com/open-props/theme.light.switch.min.css";
@import "https://unpkg.com/open-props/theme.dark.switch.min.css";

:root {
  --page-background: unset;
}

body::before {
  background: var(--page-background);
  opacity: 0.4;
  content: " ";
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

html,
body,
main {
  height: 100%;
}

main {
  opacity: var(--ui-opacity);
  line-height: 1.5;
  font-family: "IBM Plex Sans", "Punctuation SC", "Inter", ui-sans-serif,
    system-ui, "PingFang SC", "Noto Sans CJK SC", "Noto Sans SC", "Heiti SC",
    "Microsoft YaHei", "DengXian", sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  overflow-x: hidden;
  display: grid;
  grid-template-rows: var(--size-8) calc(100% - var(--size-8));
  /* grid-template-columns: repeat(1, 1fr); */
}

h1 {
  font-size: var(--font-size-6);
}
h2 {
  font-size: var(--font-size-5);
}
h3 {
  font-size: var(--font-size-4);
}
h4 {
  font-size: var(--font-size-3);
}
h5 {
  font-size: var(--font-size-2);
}
h6 {
  font-size: var(--font-size-1);
}

nav {
  padding-inline: var(--size-3);
  display: flex;
  flex-wrap: wrap;
  flex-direction: row-reverse;
  align-items: center;
  gap: var(--size-4);
  justify-self: stretch;
  border-bottom: var(--border-size-1) solid var(--surface-3);
  box-shadow: var(--shadow-1);
}

form {
  display: flex;
  gap: var(--size-3);

  label {
    display: flex;
    place-items: center;
    gap: var(--size-1);
  }
}

#stickySizeDummy {
  width: var(--size-fluid-9);
  height: 0;
}

.sticky {
  position: absolute;
  background-color: var(--surface-3);
  color: var(--text-2);
  cursor: default;
  box-shadow: var(--shadow-2);
  border-radius: var(--radius-conditional-2);
  display: flex;
  flex-direction: column;
  align-items: stretch;
  width: var(--size-fluid-9);
  height: var(--size-fluid-9);
  min-width: var(--size-fluid-6);
  min-height: var(--size-fluid-6);
  border: var(--border-size-1) solid var(--surface-4);
}
.ghost {
  background-color: unset;
  border: var(--border-size-1) solid transparent;
  color: none;
  box-shadow: none;

  .resizeHandle {
    pointer-events: none;
  }
  .stickyHeader {
    opacity: 0;
    pointer-events: none;
  }
  textarea::placeholder {
    opacity: 0;
  }
}
.resizeHandle {
  position: absolute;
  background-color: transparent;
}
.resizeHandle.top {
  top: var(--size-px-00);
  left: var(--size-px-00);
  right: var(--size-px-00);
  height: var(--size-px-2);
  cursor: n-resize;
}
.resizeHandle.right {
  top: var(--size-px-00);
  right: var(--size-px-00);
  bottom: var(--size-px-00);
  width: var(--size-px-2);
  cursor: e-resize;
}
.resizeHandle.bottom {
  bottom: var(--size-px-00);
  left: var(--size-px-00);
  right: var(--size-px-00);
  height: var(--size-px-2);
  cursor: s-resize;
}
.resizeHandle.left {
  top: var(--size-px-00);
  left: var(--size-px-00);
  bottom: var(--size-px-00);
  width: var(--size-px-2);
  cursor: w-resize;
}
.resizeHandle.topLeft {
  top: var(--size-px-00);
  left: var(--size-px-00);
  width: var(--size-px-2);
  height: var(--size-px-2);
  cursor: nw-resize;
}
.resizeHandle.topRight {
  top: var(--size-px-00);
  right: var(--size-px-00);
  width: var(--size-px-2);
  height: var(--size-px-2);
  cursor: ne-resize;
}
.resizeHandle.bottomLeft {
  bottom: var(--size-px-00);
  left: var(--size-px-00);
  width: var(--size-px-2);
  height: var(--size-px-2);
  cursor: sw-resize;
}
.resizeHandle.bottomRight {
  bottom: var(--size-px-00);
  right: var(--size-px-00);
  width: var(--size-px-2);
  height: var(--size-px-2);
  cursor: se-resize;
}

.maximized {
  height: 100%;
  width: 100%;
  left: 0 !important;
  top: 0 !important;
  transition: all 0.1s var(--ease-out-5);
}

.remove {
  animation: var(--animation-scale-down), var(--animation-fade-out);
  animation-timing-function: var(--ease-elastic-in-out-4);
}

.stickyHeader {
  background-color: var(--surface-4);
  cursor: grab;
  user-select: none;
}

/* TODO: inconsist naming */
.controls {
  float: right;
  display: flex;
  justify-content: center;
  align-items: center;
}

.controls button {
  background-color: inherit;
  color: var(--text-2);
}
.controls button:hover {
  color: var(--text-1);
}

.stickyBody {
  flex: 1;
  padding: var(--size-2);

  .preview {
    height: 100%;
    padding-inline: var(--size-2);
  }
}

.stickyBody:has(.preview:not([hidden])) {
  overflow: auto;
}

.stickyBody:has(iframe) {
  padding: 0;
}

.stickyBody textarea {
  border: none;
  background-color: inherit;
  color: inherit;
  padding: 0;
  border-radius: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  box-shadow: none;
  resize: none;
}

.stickyContainer {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.autoArrange {
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-wrap: wrap;

  .sticky {
    position: static;
  }
}

.mainSection {
  position: relative;
  display: flex;
  justify-content: center;
}

/* @commandPalette start */
#commandPalette {
  position: fixed;
  top: 35%;
  left: 50%;
  transform: translateX(-50%);
  width: var(--size-content-3);
  background-color: var(--surface-1);
  border-radius: var(--radius-2);
  border: var(--border-size-1) solid var(--surface-4);
  box-shadow: var(--shadow-3);
  padding: var(--size-3);
  z-index: 999999;
}
.searchInputWrapper {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
.searchIcon {
  position: absolute;
  left: var(--size-2);
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-2);
}
#searchInput {
  width: 100%;
  padding: var(--size-2) var(--size-2) var(--size-2) var(--size-8);
  font-size: var(--font-size-3);
  border: none;
  border-radius: var(--radius-conditional-2);
  background-color: var(--surface-3);
  color: var(--text-1);
}
#commandList {
  list-style-type: none;
  padding: 0;
  max-height: 300px;
  overflow-y: auto;

  li {
    padding: var(--size-2);
    max-inline-size: unset; /* Reverts open-props normalize */
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  li:hover,
  li[aria-selected="true"] {
    background-color: var(--surface-3);
  }
  kbd {
    font-size: var(--font-size-0);
    margin-right: var(--size-2);
  }
}
#commandList:not(:empty) {
  margin-top: var(--size-3);
}
/* @commandPalette end */

/* @uploadDialog start */
/* @uploadDialog end */

/* @settings start */
#settings {
  width: 60%;
  background-color: var(--surface-3);
  box-shadow: var(--shadow-2);
  padding: var(--size-5) var(--size-7);
  display: flex;
  flex-direction: column;
  gap: var(--size-7);
  overflow: auto;

  header {
    padding-bottom: var(--size-3);
  }
}
/* #settings section::after { */
/*   content: ""; */
/*   display: block; */
/*   padding-top: var(--size-3); */
/*   border-bottom: var(--border-size-1) solid var(--text-1); */
/* } */
#langDropdown {
  min-width: var(--size-fluid-8);
}
#appearancePref {
  label {
    display: grid;
    gap: var(--size-1);
  }
  img {
    max-width: var(--size-content-2);
  }
  h3 {
    padding-bottom: var(--size-3);
  }
  #uiOpacityInput {
    max-width: var(--size-fluid-8);
  }
  #uiOpacityInput::-webkit-slider-thumb,
  #uiOpacityInput::-moz-range-thumb {
    opacity: var(--ui-opacity);
  }
}
.backgroundPresetContainer {
  display: grid;
  grid-auto-flow: column;
  gap: var(--size-2);
  scroll-snap-type: x mandatory;
  /* padding-inline: var(--gap); */
  /* scroll-padding-inline: var(--size-8); */
}
.backgroundPresetContainer button {
  padding: var(--size-5);
}
.dropzone {
  border-width: var(--border-size-2);
  border-style: dashed;
  border-radius: var(--radius-conditional-3);
  padding: var(--size-5);
  aspect-ratio: var(--ratio-widescreen);
  flex: 1;
  width: var(--size-content-2);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  gap: var(--size-3);
  cursor: pointer;
}
.dropzone[active] {
  background-color: var(--surface-2);
}
.btn {
  border-radius: var(--radius-conditional-2);
  height: var(--size-7);
  padding-inline: var(--size-3);
  border: var(--border-size-2) solid var(--surface-4);
}
.formGroup {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--size-3);
}
#shortcutList {
  display: grid;
  gap: var(--size-3) var(--size-4);
  justify-content: start;

  label {
    text-align: right;
  }
  input {
    font-family: var(--font-mono);
    margin-left: var(--size-3);
  }
}
/* @settings end */

#contextMenu {
  position: fixed;
  background-color: var(--surface-1);
  border: var(--border-size-1) solid var(--surface-3);
  border-radius: var(--radius-conditional-2);
  box-shadow: var(--shadow-2);
  padding: var(--size-2);
  z-index: 1000;

  .menuItem {
    font-size: var(--font-size-1);
    cursor: pointer;
    padding-inline: var(--size-2);
  }
  .menuItem:hover {
    background-color: var(--surface-3);
  }

  hr {
    margin-block: var(--size-1);
    border: none;
    border-top: var(--border-size-1) solid var(--surface-3);
  }
}

#newStickyBtn {
  padding: 0;
}
#newStickyBtn:hover {
  background: unset;
}
